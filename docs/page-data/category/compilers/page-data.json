{"componentChunkName":"component---src-templates-category-template-category-template-tsx","path":"/category/compilers","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/2023-08-06---Compilers-For-The-Future//compilers-for-the-future","categorySlug":"/category/compilers/"},"frontmatter":{"description":"How can we future-proof our programming languages?","category":"Compilers","title":"Compilers For The Future","date":"2023-06-08T11:52:37.121Z","slug":"/compilers-for-the-future"}}},{"node":{"fields":{"slug":"/posts/2020-27-08---The-Oak-Compiler/the-oak-compiler","categorySlug":"/category/compilers/"},"frontmatter":{"description":"I've written an alternative to the C programming language. This is how it works, and what I've learned.","category":"Compilers","title":"The Oak Compiler","date":"2020-08-27T11:52:37.121Z","slug":"the-oak-compiler"}}},{"node":{"fields":{"slug":"/posts/2020-04-03---Combinator-Compiler/combinator-compilers","categorySlug":"/category/compilers/"},"frontmatter":{"description":"A brief exploration of combinator compilers.","category":"Compilers","title":"Combinator Compilers","date":"2020-03-04T11:52:37.121Z","slug":"combinator-compilers"}}},{"node":{"fields":{"slug":"/posts/2019-23-08---Writing-a-Compiler-with-Honeycomb/writing-a-compiler-with-honeycomb","categorySlug":"/category/compilers/"},"frontmatter":{"description":"After reading about parser combinator libraries, I started to write my own! I eventually got it into a working state, and published it on crates.io under the name `honeycomb`.","category":"Compilers","title":"Writing a Compiler with Honeycomb","date":"2020-01-09T01:35:32.169Z","slug":"writing-a-compiler-with-honeycomb"}}}]}},"pageContext":{"group":"Compilers","limit":4,"offset":0,"pagination":{"currentPage":0,"prevPagePath":"/category/compilers","nextPagePath":"/category/compilers/page/1","hasNextPage":false,"hasPrevPage":false}}},"staticQueryHashes":["251939775","2764776372","401334301","63107425"]}